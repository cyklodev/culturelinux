{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CultureLinux","text":""},{"location":"#description","title":"Description","text":"<p>This is a open documentation build by Cykldev</p>"},{"location":"#usage","title":"Usage","text":"<ul> <li>$ : represent shell with regular user</li> <li># : represent shell with root user</li> </ul>"},{"location":"containers/docker/","title":"Docker","text":""},{"location":"containers/docker/#images","title":"images","text":""},{"location":"containers/docker/#list","title":"List","text":"<pre><code>docker images\ndocker images --all\ndocker images moulti-stream\n</code></pre>"},{"location":"containers/docker/#build","title":"Build","text":"<pre><code>docker build -f DockerFile -t moulti-stream:0.0.9 .\n</code></pre>"},{"location":"containers/docker/#remove","title":"Remove","text":"<pre><code>docker image prune -a -f\n</code></pre>"},{"location":"databases/influxdb/","title":"Influxdb","text":""},{"location":"databases/influxdb/#retention","title":"Retention","text":"<pre><code>influx\n&gt; SHOW RETENTION POLICIES on icinga2\n&gt; CREATE RETENTION POLICY \"2years\" ON icinga2 DURATION 100w REPLICATION 1 DEFAULT\n&gt; DROP RETENTION POLICY \"autogen\"  ON icinga2\n</code></pre>"},{"location":"databases/mariadb/","title":"MariaDB","text":""},{"location":"databases/mariadb/#install","title":"Install","text":"<pre><code>mariadb_secure_install\n</code></pre>"},{"location":"databases/mariadb/#root-password","title":"Root password","text":""},{"location":"databases/mariadb/#hot-change","title":"Hot change","text":"<pre><code>mysqladmin -u root -p'OLDPASSWORD' password 'NEWPASSWORD';\n</code></pre>"},{"location":"databases/mariadb/#cold-change","title":"Cold change","text":"<pre><code>systemctl mariadb stop\nmysqld_safe --skip-grant-tables &amp;\nmysql mysql -u root\nUPDATE user SET password=PASSWORD('NEWPASSWORD') WHERE user=\"root\";\nFLUSH PRIVILEGES;\nexit\nsystemctl mariadb start\n</code></pre>"},{"location":"databases/mariadb/#user-split","title":"User split","text":"<pre><code>mysqladmin -u root -p create MYDB\nmysql -u root -p mysql\nGRANT ALL ON MYDB.* TO MYUSER@'%' IDENTIFIED BY 'NEWPASSWORD';\nGRANT ALL ON MYDB.* TO MYUSER@localhost IDENTIFIED BY 'NEWPASSWORD';\nFLUSH PRIVILEGES;\nexit\n</code></pre> <ul> <li>% : from any ip</li> <li>localhost: only from localhost</li> </ul>"},{"location":"databases/mariadb/#extract-permissions","title":"Extract permissions","text":"<pre><code>use mysql\nselect distinct concat('SHOW GRANTS FOR ''' , user, '''@''',host,''';') as query from user;\n</code></pre>"},{"location":"databases/mariadb/#tables","title":"Tables","text":""},{"location":"databases/mariadb/#copy","title":"Copy","text":"<pre><code>CREATE TABLE new_table_name AS\nSELECT * FROM old_table_name;\n</code></pre>"},{"location":"databases/mariadb/#log-requests","title":"Log requests","text":""},{"location":"databases/mariadb/#activate","title":"Activate","text":"<pre><code>SET global general_log = 1;\n</code></pre>"},{"location":"databases/mariadb/#destination","title":"Destination","text":""},{"location":"databases/mariadb/#table","title":"Table","text":"<p><code>SET global log_output = 'table';</code> <code>select * from general_log; select * from mysql.general_log where command_type = 'Query' and user_host = 'user[user] @ localhost []'</code></p>"},{"location":"databases/mariadb/#file","title":"File","text":"<p><code>SET global log_output = 'file'; SET global general_log_file = '/tmp/mysql_trace.log';</code></p>"},{"location":"databases/mariadb/#desactivate","title":"Desactivate","text":"<pre><code>SET global general_log = 0;\n</code></pre>"},{"location":"databases/mariadb/#backup","title":"Backup","text":""},{"location":"databases/mariadb/#all","title":"All","text":""},{"location":"databases/mariadb/#restore","title":"Restore","text":""},{"location":"databases/mariadb/#upgrade","title":"Upgrade","text":"<pre><code># service mariadb stop\n# yum remove MariaDB-*\n# cat /etc/yum.repos.d/MariaDB.repo\n# sed -i 's/11\\.1/11\\.2/' /etc/yum.repos.d/MariaDB.repo\n# yum install MariaDB-server\n# service mariadb start\n# /usr/bin/mariadb-upgrade -u root -p\n</code></pre>"},{"location":"databases/mongodb/","title":"MongoDB","text":""},{"location":"databases/mongodb/#install","title":"Install","text":""},{"location":"databases/mongodb/#debian-11","title":"Debian 11","text":"<pre><code># apt install gpg wget\n# wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | apt-key add -\n# echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/5.0 main\" | tee /etc/apt/sources.list.d/mongodb-org-5.0.list\n# apt update\n# apt install mongodb-org\n# systemctl enable --now mongod\n</code></pre>"},{"location":"databases/mongodb/#authentication","title":"Authentication","text":""},{"location":"databases/mongodb/#create-admin-first","title":"Create admin first","text":"<p><pre><code>$ mongosh admin\nswitched to db admin\n</code></pre> <pre><code>db.createUser(\n  {\n    user: \"admin\",\n    pwd: \"admin_pwd\",\n    roles: [\n      { role: \"userAdminAnyDatabase\", db: \"admin\" },\n      { role: \"readWriteAnyDatabase\", db: \"admin\" }\n    ]\n  }\n)\n</code></pre></p>"},{"location":"databases/mongodb/#force-auth","title":"Force auth","text":"<p><pre><code># systemctl stop mongod\n# vi /etc/mongod.conf\n</code></pre> <pre><code>...\nsecurity:\n  authorization: enabled\n...\n</code></pre> <pre><code># systemctl start mongod\n</code></pre></p>"},{"location":"databases/mongodb/#login","title":"Login","text":"<ul> <li>failed <pre><code>$ mongosh\ntest&gt; db.getCollectionNames()\nMongoServerError: Command listCollections requires authentication\n</code></pre></li> <li>success <pre><code>$ mongosh mongodb://admin:admin_pwd@localhost:27017/test --authenticationDatabase admin\ntest&gt; db.getCollectionNames()\n[]\n</code></pre></li> </ul>"},{"location":"databases/mongodb/#users","title":"Users","text":""},{"location":"databases/mongodb/#get","title":"get","text":"<pre><code>$ mongosh mongodb://admin:admin_pwd@localhost:27017/test --authenticationDatabase admin\nadmin&gt; db.getUsers()\n{\n  users: [\n    {\n      _id: 'admin.admin',\n      userId: new UUID(\"58625790-8e6b-4433-9e54-777ede29afea\"),\n      user: 'admin',\n      db: 'admin',\n      roles: [\n        { role: 'readWriteAnyDatabase', db: 'admin' },\n        { role: 'userAdminAnyDatabase', db: 'admin' }\n      ],\n      mechanisms: [ 'SCRAM-SHA-1', 'SCRAM-SHA-256' ]\n    }\n  ],\n  ok: 1\n}\n</code></pre>"},{"location":"databases/mongodb/#add-role","title":"Add role","text":"<pre><code>admin&gt; db.grantRolesToUser('admin',['dbAdminAnyDatabase'])\n{ ok: 1 }\nadmin&gt; db.getUsers()\n{\n  users: [\n    {\n      _id: 'admin.admin',\n      userId: new UUID(\"58625790-8e6b-4433-9e54-777ede29afea\"),\n      user: 'admin',\n      db: 'admin',\n      roles: [\n        { role: 'dbAdminAnyDatabase', db: 'admin' },\n        { role: 'userAdminAnyDatabase', db: 'admin' },\n        { role: 'readWriteAnyDatabase', db: 'admin' }\n      ],\n      mechanisms: [ 'SCRAM-SHA-1', 'SCRAM-SHA-256' ]\n    }\n  ],\n  ok: 1\n}\n</code></pre>"},{"location":"databases/mongodb/#change-password","title":"Change password","text":"<pre><code>admin&gt; db.changeUserPassword(\"svc_backup\",\"mysqlpwd\")\n{ ok: 1 }\n</code></pre>"},{"location":"databases/mongodb/#connect","title":"Connect","text":""},{"location":"databases/mongodb/#auto-connect","title":"auto connect","text":"<p>vi ~/.mongoshrc.js <pre><code>db = connect(\"localhost:27017/admin\");\ndb.auth('admin','mysqlpwd')\n</code></pre></p> <pre><code>mongosh --authenticationDatabase admin\n</code></pre>"},{"location":"databases/mongodb/#no-autoconnect","title":"no autoconnect","text":"<pre><code>mongosh --authenticationDatabase admin --norc -u otheruser -p\n</code></pre>"},{"location":"databases/mongodb/#database","title":"Database","text":""},{"location":"databases/mongodb/#create","title":"Create","text":"<pre><code>$ mongosh \ntest&gt; use ex_db\nswitched to db ex_db\nex_db&gt; db.createCollection(\"posts\")\n{ ok: 1 }\nex_db&gt; show dbs\nadmin   116.00 KiB\nconfig  108.00 KiB\nex_db     8.00 KiB\nlocal    72.00 KiB\n</code></pre>"},{"location":"databases/mongodb/#drop","title":"Drop","text":"<ul> <li>User must have role : dbAdmin or dbAdminAnyDatabase <pre><code>$ mongosh \ntest&gt; use ex_db\nswitched to db ex_db\nex_db&gt; db.dropDatabase()\n{ ok: 1, dropped: 'ex_db' }\nex_db&gt; show dbs\nadmin   116.00 KiB\nconfig  108.00 KiB\nlocal    72.00 KiB\n</code></pre></li> </ul>"},{"location":"databases/sqlserver/","title":"Sql Server","text":""},{"location":"databases/sqlserver/#install-ubuntu2204","title":"Install (ubuntu22.04)","text":""},{"location":"databases/sqlserver/#repository","title":"Repository","text":"<pre><code># apt install gnupg2 apt-transport-https wget curl\n# wget -q -O- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | tee /usr/share/keyrings/microsoft.gpg &gt; /dev/null 2&gt;&amp;1  \n# echo deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/ubuntu/20.04/mssql-server-2019 focal main &gt; /etc/apt/sources.list.d/mssql-20_04.list\n</code></pre>"},{"location":"databases/sqlserver/#fix-libldap","title":"fix libldap","text":"<pre><code># wget http://security.ubuntu.com/ubuntu/pool/main/o/openldap/libldap-2.4-2_2.4.49+dfsg-2ubuntu1.9_amd64.deb\n# apt install ./libldap-2.4*\n</code></pre>"},{"location":"databases/sqlserver/#install","title":"Install","text":"<pre><code># apt install mssql-server\n</code></pre>"},{"location":"databases/sqlserver/#fix-cryptossl","title":"Fix crypto/ssl","text":"<pre><code># cd /opt/mssql/lib/\n# find / -name libcrypto.so.1.1\n# ln -s /snap/core20/1974/usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 libcrypto.so\n# ln -s /snap/core20/1974/usr/lib/x86_64-linux-gnu/libssl.so.1.1 libssl.so\n</code></pre>"},{"location":"databases/sqlserver/#setup","title":"setup","text":"<pre><code>/opt/mssql/bin/mssql-conf setup\n</code></pre>"},{"location":"databases/sqlserver/#install-cli","title":"install cli","text":"<pre><code># echo deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft.gpg] https://packages.microsoft.com/ubuntu/20.04/prod focal main &gt; /etc/apt/sources.list.d/microsoft-prod.list\n# apt update\n# apt install mssql-tools unixodbc-dev\n# ln -s /opt/mssql-tools/bin/sqlcmd /usr/local/bin/sqlcmd\n</code></pre>"},{"location":"databases/sqlserver/#user","title":"User","text":""},{"location":"databases/sqlserver/#create","title":"Create","text":"<pre><code>use master \nCREATE LOGIN clinux WITH PASSWORD = 'Clinux';\n\nIF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'db_clinux')\nBEGIN\nCREATE DATABASE db_clinux;\nEND;\nGO\n\nuse db_clinux\nCREATE USER u_clinux FOR LOGIN clinux;\nALTER ROLE db_owner ADD MEMBER u_clinux ;\nGO\n</code></pre>"},{"location":"databases/sqlserver/#usage","title":"Usage","text":""},{"location":"databases/sqlserver/#connect","title":"Connect","text":""},{"location":"databases/sqlserver/#interactive","title":"interactive","text":"<pre><code>$ /opt/mssql-tools/bin/sqlcmd -S 192.168.1.110 -U SA\n</code></pre>"},{"location":"databases/sqlserver/#not-interactive","title":"not interactive","text":"<ul> <li>not secure <code>$ /opt/mssql-tools/bin/sqlcmd -S 192.168.1.110 -U SA -P 'xXxXxxX'</code></li> <li>a little better <code>$ export SQLCMDPASSWORD='xXxXxxX'     $ /opt/mssql-tools/bin/sqlcmd -S 192.168.1.110 -U SA</code> </li> </ul>"},{"location":"databases/sqlserver/#query","title":"query","text":"<pre><code>$ /opt/mssql-tools/bin/sqlcmd -S 192.168.1.110 -U SA -Q \"SELECT @@version GO\"\n</code></pre>"},{"location":"databases/sqlserver/#script","title":"script","text":"<pre><code>$ /opt/mssql-tools/bin/sqlcmd -S 192.168.1.110 -U SA -i script-file.sql\n</code></pre>"},{"location":"databases/sqlserver/#query_1","title":"Query","text":""},{"location":"databases/sqlserver/#database","title":"Database","text":"<ul> <li>get current <pre><code>    select DB_NAME()\n    GO\n</code></pre></li> <li>get all  <pre><code>    select name from sys.databases\n    GO\n</code></pre></li> <li>create <pre><code>    IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'datalake')\n    BEGIN\n    CREATE DATABASE datalake;\n    END;\n    GO\n</code></pre></li> </ul>"},{"location":"databases/sqlserver/#table","title":"Table","text":"<ul> <li>get all <pre><code>    use datalake\n    SELECT name,crdate FROM SYSOBJECTS WHERE xtype = 'U';\n    GO\n</code></pre></li> <li>Describe <pre><code>    exec sp_columns MyTable\n</code></pre></li> </ul>"},{"location":"databases/sqlserver/#columns","title":"Columns","text":"<ul> <li>add column  <pre><code>    ALTER TABLE MyTable ADD zone varchar(255)\n</code></pre></li> <li>delete column  <pre><code>    ALTER TABLE MyTable DROP COLUMN zone\n</code></pre></li> </ul>"},{"location":"databases/sqlserver/#insert","title":"insert","text":""},{"location":"databases/sqlserver/#datetime","title":"datetime","text":"<pre><code>    INSERT [dbo].[MyTable] ([ID], [DATEMyDatetime]) VALUES (500, convert(datetime, '2022-11-17 00:00:00', 121))\n</code></pre>"},{"location":"debian/filesystem/","title":"filesystem","text":""},{"location":"debian/filesystem/#extend","title":"Extend","text":"<pre><code>growpart /dev/sda 1\nresize2fs /dev/sda1\n</code></pre>"},{"location":"debian/msmtp/","title":"msmtp","text":""},{"location":"debian/msmtp/#install","title":"install","text":"<pre><code># apt install msmtp msmtp-mta\n</code></pre>"},{"location":"debian/msmtp/#config","title":"Config","text":"<pre><code># cat &lt;&lt; EOF &gt; /etc/msmtprc\n\ndefaults\nauth           on\ntls            on\ntls_starttls   on\ntls_trust_file /etc/ssl/certs/ca-certificates.crt\nlogfile        /var/log/msmtp\n\naccount        gmail\nauth           plain\nhost           smtp.gmail.com\nport           587\nfrom           sender@gmail.com\nuser           sender@gmail.com\npassword       XXXXXXXXXXXXXXXXXXXXXXXX\n\naccount default : gmail\nEOF\n# chown root:msmtp /etc/msmtprc\n# chmod 640 /etc/msmtprc\n</code></pre>"},{"location":"debian/msmtp/#test","title":"Test","text":"<pre><code>$ echo \"sample message\" | mail -s \"subject\" email@address\n</code></pre>"},{"location":"debian/network/","title":"Network","text":""},{"location":"debian/network/#ip-config","title":"IP config","text":""},{"location":"debian/network/#restart","title":"Restart","text":"<pre><code># systemctl restart networking.service\n</code></pre>"},{"location":"debian/network/#dhcp","title":"dhcp","text":"<pre><code># vim /etc/network/interfaces\niface eth0 inet dhcp\n</code></pre>"},{"location":"debian/network/#static","title":"static","text":"<pre><code># vim /etc/network/interfaces\niface eth0 inet static\naddress 192.168.1.83/24\ngateway 192.168.1.1\ndns-nameservers 192.168.1.20 192.168.1.1\ndns-domain local.culturelinux.lan\n</code></pre>"},{"location":"debian/nftables/","title":"NFtables","text":""},{"location":"debian/nftables/#enable","title":"Enable","text":"<pre><code># systemctl enable --now nftables\n</code></pre>"},{"location":"debian/nftables/#list","title":"List","text":"<pre><code># nft list ruleset\n</code></pre>"},{"location":"debian/nftables/#save","title":"Save","text":"<pre><code># nft list ruleset &gt;&gt; /etc/nftables.conf\n</code></pre>"},{"location":"debian/nftables/#save_1","title":"Save","text":"<pre><code># nft -f /etc/nftables.conf\n</code></pre>"},{"location":"debian/nftables/#basic-sshhttphttps","title":"Basic ssh,http,https","text":"<pre><code>nft add table inet firewall\nnft add chain inet firewall input { type filter hook input priority 0 \\; policy drop\\; } \nnft add rule inet firewall input ct state established,related accept\nnft add rule inet firewall input ct state invalid drop\nnft add rule inet firewall input ip protocol icmp limit rate 4/second accept\nnft add rule inet firewall input tcp dport { 22, http, https }\nnft add rule inet firewall input udp dport { 22, http, https }\n# don't forward anything, you're not a router!\nnft add chain inet firewall forward { type filter hook forward priority 0 \\; policy drop\\; } \n# allow all outgoing traffic\nnft add chain inet firewall output { type filter hook output priority 0 \\; policy accept\\; }\n</code></pre>"},{"location":"debian/packages/","title":"packages","text":""},{"location":"debian/packages/#apt","title":"Apt","text":""},{"location":"debian/packages/#update-upgrade","title":"update / upgrade","text":""},{"location":"debian/packages/#update","title":"update","text":"<p>refresh repository <pre><code># apt update \n</code></pre></p>"},{"location":"debian/packages/#upgrade","title":"upgrade","text":"<p>really upgrade packages <pre><code># apt upgrade\n</code></pre></p> <p>really upgrade packages and remove unused packages <pre><code># apt full-upgrade\n</code></pre></p>"},{"location":"debian/packages/#install-package","title":"install package","text":"<pre><code># apt install nmon\n</code></pre>"},{"location":"debian/packages/#remove-package","title":"remove package","text":"<pre><code># apt remove nmon\n</code></pre> <p>remove + purge  <pre><code># apt autoremove nmon\n</code></pre></p>"},{"location":"debian/packages/#package-provided-by","title":"package provided by","text":"<pre><code># apt install apt-file\n# apt-file update\n# apt-file search --package-only netstat\n</code></pre>"},{"location":"debian/packages/#nala","title":"Nala","text":""},{"location":"debian/packages/#install-from-repo","title":"install from repo","text":"<pre><code># apt install nala\n# nala --version\nnala 0.12.0\n</code></pre>"},{"location":"debian/packages/#install-from-asset","title":"install from asset","text":"<pre><code># wget https://gitlab.com/volian/nala/uploads/dd7631fdacb0c4837df18ed11b8bfe15/nala_0.14.0_all.deb\n# apt install ./nala_0.14.0_all.deb\n# nala --version\nnala 0.14.0\n</code></pre>"},{"location":"debian/packages/#fetch-best-mirror","title":"fetch best mirror","text":"<pre><code># nala fetch\n</code></pre>"},{"location":"debian/packages/#install-package_1","title":"install package","text":"<pre><code># nala install nmon\n</code></pre>"},{"location":"debian/packages/#get-history","title":"get history","text":"<pre><code>nala history\n</code></pre>"},{"location":"debian/packages/#rollback","title":"rollback","text":"<pre><code>nala history undo ID\n</code></pre>"},{"location":"debian/snap/","title":"Snap","text":""},{"location":"debian/snap/#install","title":"Install","text":"<pre><code># apt install snapd \n# systemctl enable --now snapd.service snapd.socket\n# systemctl status snapd.service snapd.socket\n# source /etc/profile.d/apps-bin-path.sh\n</code></pre>"},{"location":"debian/snap/#use","title":"Use","text":""},{"location":"debian/snap/#install_1","title":"install","text":"<pre><code># snap install hello-world\n</code></pre>"},{"location":"debian/snap/#list-installed","title":"list installed","text":"<pre><code># snap list\n</code></pre>"},{"location":"debian/snap/#search","title":"search","text":"<pre><code># snap find microk8s\n</code></pre>"},{"location":"debian/ufw/","title":"ufw (uncomplicate firewall)","text":""},{"location":"debian/ufw/#list-rules","title":"list rules","text":"<pre><code># ufw status\n# ufw status verbose\n# ufw status numbered\n</code></pre>"},{"location":"debian/ufw/#action","title":"action","text":"<pre><code># ufw enable\n# ufw disable\n</code></pre>"},{"location":"debian/ufw/#logging","title":"Logging","text":"<pre><code># ufw logging on\n# ufw logging off\n</code></pre>"},{"location":"debian/ufw/#simple-rules","title":"Simple rules","text":"<pre><code># ufw allow 80/tcp\n</code></pre>"},{"location":"debian/ufw/#advancerd-rules","title":"Advancerd rules","text":"<pre><code># ufw allow proto tcp from 192.168.1.62 to any port 80\n</code></pre>"},{"location":"git/git/","title":"git","text":""},{"location":"git/git/#revert-to-commit","title":"Revert to commit","text":"<pre><code>git log --pretty=oneline --abbrev-commit\n</code></pre>"},{"location":"git/gitlab/","title":"Gitlab","text":""},{"location":"git/gitlab/#install","title":"Install","text":""},{"location":"git/gitlab/#docker","title":"Docker","text":"<pre><code>https://github.com/sameersbn/docker-gitlab\n</code></pre>"},{"location":"git/gitlab/#backup","title":"Backup","text":"<pre><code>docker-compose down\ndocker-compose run --rm gitlab app:rake gitlab:backup:create\n</code></pre>"},{"location":"git/gitlab/#cicd","title":"CICD","text":""},{"location":"git/gitlab/#register-runner","title":"Register runner","text":""},{"location":"git/gitlab/#cli-glab","title":"CLI glab","text":""},{"location":"git/gitlab/#install_1","title":"install","text":"<pre><code>wget https://gitlab.com/gitlab-org/cli/-/releases/v1.33.0/downloads/glab_1.33.0_Linux_x86_64.tar.gz\ntar xvzf glab_1.33.0_Linux_x86_64.tar.gz\nmv bin/glab /usr/local/bin/\n</code></pre>"},{"location":"git/gitlab/#login","title":"Login","text":"<pre><code>glab auth login --hostname gitlab.fqdn --stdin &lt; ~/.gitlab.token\n</code></pre>"},{"location":"git/gitlab/#pipeline","title":"Pipeline","text":""},{"location":"git/gitlab/#list","title":"list","text":"<pre><code>glab pipeline list --sort asc\nglab pipeline list --sort asc -P 5\n</code></pre>"},{"location":"git/gitlab/#delete","title":"delete","text":"<pre><code>for id in `glab pipeline list --sort asc -P 200| awk '{print substr($3,2)}'| tail -n+2`; do glab pipeline delete $id; done\n</code></pre>"},{"location":"git/gitlab/#artifact","title":"artifact","text":"<pre><code>docker exec --user git -it gitlab_gitlab_1 bundle exec rake gitlab:cleanup:orphan_job_artifact_files DRY_RUN=false RAILS_ENV=production\n</code></pre>"},{"location":"git/gitlab/#container-image","title":"container image","text":""},{"location":"git/gitlab/#delete_1","title":"delete","text":"<pre><code>docker exec -it gitlab_registry_1 /bin/sh\nregistry garbage-collect /etc/docker/registry/config.yml\nregistry garbage-collect --delete-untagged /etc/docker/registry/config.yml\n</code></pre>"},{"location":"iac/ansible/","title":"ansible","text":""},{"location":"iac/ansible/#install","title":"install","text":"<pre><code>sudo dnf install pipx\npipx install --include-deps ansible\npipx inject --include-apps ansible argcomplete\n</code></pre>"},{"location":"iac/ansible/#upgrade","title":"Upgrade","text":"<pre><code>pipx upgrade --include-injected ansible\n</code></pre>"},{"location":"iac/ansible/#test","title":"Test","text":"<pre><code>python3 -m pip -V\nansible --version\nansible-community --version\n</code></pre>"},{"location":"iac/ansible/#config","title":"Config","text":"<pre><code>ansible-config init --disabled -t all &gt; ansible.cfg\n</code></pre>"},{"location":"iac/ansible/#inventory","title":"inventory","text":""},{"location":"iac/ansible/#setup","title":"setup","text":"<pre><code># single host\nbpg-debian12 ansible_host=192.168.1.170 ansible_user=debian\n</code></pre>"},{"location":"iac/ansible/#test_1","title":"test","text":"<pre><code>ansible bpg-debian12 -m ping -i inventory\nansible all -m ping -i inventory\n</code></pre>"},{"location":"iac/ansible/#envvar","title":"envvar","text":"<pre><code>export ANSIBLE_INVENTORY=inventory\n</code></pre>"},{"location":"iac/ansible/#playbook","title":"playbook","text":""},{"location":"iac/ansible/#create-test","title":"create test","text":"<pre><code>---\n- name : test user\n  hosts: bpg-debian12\n  remote_user: debian\n  become: true\n\n  tasks:\n  - name: get id\n    shell: id\n    register: results\n  - name: Add the user 'clinux'\n    ansible.builtin.user:\n      name: clinux\n      comment: created by ansible\n  - name: break\n    shell: exit 1\n    ignore_errors: true\n  - name: Remove the user 'clinux'\n    ansible.builtin.user:\n      name: clinux\n      state: absent\n      remove: yes\n\n  - name: Install some packages\n    package:\n      name:\n        - htop\n        - curl\n        - nmon\n        - net-tools\n        - nginx\n      state: latest\n\n  - name: Make sure a service unit is running\n    ansible.builtin.systemd_service:\n      state: started\n      enabled: true\n      name: nginx\n\n  - debug:\n      var: results.stdout \n</code></pre>"},{"location":"iac/ansible/#create-post-tofu-root","title":"create post tofu root","text":"<pre><code>---\n- name: \"tofu : setup root key\"\n  ansible.builtin.copy:\n    remote_src: true\n    src: /home/debian/.ssh/authorized_keys\n    dest: /root/.ssh/authorized_keys\n    owner: root\n    group: root\n    mode: '0600'\n\n- name: \"tofu : allow root sshkey\"\n  lineinfile:\n    path: /etc/ssh/sshd_config\n    regexp: '(.*)PermitRootLogin(.*)$'\n    line: 'PermitRootLogin without-password'\n    owner: root\n\n- name: \"tofu : reload ssh\"\n  service:\n    name: ssh\n    state: restarted\n</code></pre>"},{"location":"iac/ansible/#execute","title":"Execute","text":"<pre><code>ansible-playbook plb_get_user.yml -i inventory\nexport ANSIBLE_INVENTORY=inventory\nansible-playbook plb_get_user.yml\n</code></pre>"},{"location":"iac/ansible/#roles","title":"Roles","text":""},{"location":"iac/ansible/#create","title":"Create","text":""},{"location":"iac/ansible/#galaxy","title":"galaxy","text":"<pre><code>ansible-galaxy init roles/post_tofu --offline\n</code></pre>"},{"location":"iac/ansible/#custom","title":"custom","text":""},{"location":"iac/ansible/#structure","title":"structure","text":"<p><code>mkdir -p roles/post_tofu/tasks</code></p>"},{"location":"iac/ansible/#tasks","title":"tasks","text":"<p><code>cat &lt;&lt; EOF &gt; roles/post_tofu/tasks/main.yml</code> ```</p> <ul> <li>include_tasks: copy_ssh_key_root.yml EOF <code></code> cat &lt;&lt; EOF &gt; roles/post_tofu/tasks/copy_ssh_key_root.yml <code></code></li> </ul> <ul> <li>name: copy ssh authozied_keys to root   ansible.builtin.copy:     src: /home/debian/.ssh/authorized_keys     dest: /root/.ssh/authorized_keys     remote_src: yes     owner: root     group: root </li> <li>name: Update and upgrade apt packages   apt:     upgrade: yes     update_cache: yes     cache_valid_time: 86400 #One day   EOF ```</li> </ul>"},{"location":"iac/ansible/#playbook_1","title":"playbook","text":"<p><code>cat &lt;&lt; EOF &gt; deploy_post_tofu.yml</code> ```</p> <ul> <li>name : post actions tofu   hosts: debian12   remote_user: debian   become: true    roles:<ul> <li>post_tofu EOF       ```</li> </ul> </li> </ul>"},{"location":"iac/ansible/#run","title":"run","text":"<p><code>ansible-playbook deploy_post_tofu.yml</code></p>"},{"location":"iac/ansible/#nginx","title":"Nginx","text":""},{"location":"iac/ansible/#structure_1","title":"structure","text":"<p><code>mkdir -p roles/nginx/{tasks,handlers,files}</code></p>"},{"location":"iac/ansible/#tasks_1","title":"tasks","text":"<p><code>cat &lt;&lt; EOF &gt; roles/nginx/tasks/main.yml</code> ```</p> <ul> <li>include_tasks: install_packages.yml</li> <li>include_tasks: configuration.yml EOF <code></code> cat &lt;&lt; EOF &gt; roles/nginx/tasks/install_packages.yml <code></code></li> </ul> <ul> <li>name: Install nginx   package:     name:<ul> <li>nginx</li> <li>net-tools state: latest </li> </ul> </li> <li>name: Make sure a service unit is running   ansible.builtin.systemd_service:     state: started     enabled: true     name: nginx EOF <code></code> cat &lt;&lt; EOF &gt; roles/nginx/tasks/configuration.yml</li> <li>name: copy configuration   copy:     src: nginx.conf     dest: /etc/nginx/nginx.conf     owner: root     group: root   notify: restart_nginx   tags:<ul> <li>configuration_nginx EOF ```</li> </ul> </li> </ul>"},{"location":"iac/ansible/#handlers","title":"handlers","text":"<p><code>cat &lt;&lt; EOF &gt; roles/nginx/handlers/main.yml - name: Restart nginx   service:     name: nginx     state: restarted   listen: restart_nginx EOF</code></p>"},{"location":"iac/ansible/#files","title":"files","text":"<p><code>cat &lt;&lt; EOF &gt; roles/nginx/files/nginx.conf user www-data; worker_processes auto; pid /run/nginx.pid; error_log /var/log/nginx/error.log; include /etc/nginx/modules-enabled/*.conf;  events {     worker_connections 768;     # multi_accept on; }  http {      ##     # Basic Settings     ##      sendfile on;     tcp_nopush on;     types_hash_max_size 2048;     # server_tokens off;      server_names_hash_bucket_size 64;     # server_name_in_redirect off;      include /etc/nginx/mime.types;     default_type application/octet-stream;      ##     # SSL Settings     ##      ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE     ssl_prefer_server_ciphers on;      ##     # Logging Settings     ##      access_log /var/log/nginx/access_default.log;      ##     # Gzip Settings     ##      gzip on;      gzip_vary on;     gzip_proxied any;     gzip_comp_level 6;     gzip_buffers 16 8k;     gzip_http_version 1.1;     gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;      ##     # Virtual Host Configs     ##      include /etc/nginx/conf.d/*.conf;     include /etc/nginx/sites-enabled/*; } EOF</code></p>"},{"location":"iac/ansible/#playbook_2","title":"playbook","text":"<p>``` cat &lt;&lt; EOF &gt; deploy_webservers.yml</p> <ul> <li>name : post actions tofu   hosts: webservers   become: true   roles:<ul> <li>nginx EOF       ```</li> </ul> </li> </ul>"},{"location":"iac/ansible/#run_1","title":"run","text":"<p><code>ansible-playbook deploy_webservers.yml</code></p>"},{"location":"iac/opentofu/","title":"OpenToFu","text":""},{"location":"iac/opentofu/#install","title":"Install","text":"<pre><code>wget https://github.com/opentofu/opentofu/releases/download/v1.6.0-alpha5/tofu_1.6.0-alpha5_linux_amd64.zip\nunzip tofu*\ncp tofu /usr/local/bin/\n</code></pre>"},{"location":"iac/opentofu/#providers","title":"Providers","text":"<ul> <li>\u2620\ufe0f https://github.com/Telmate/terraform-provider-proxmox</li> <li>\u2705 https://github.com/bpg/terraform-provider-proxmox</li> </ul>"},{"location":"iac/opentofu/#auth-proxmox-81","title":"Auth (Proxmox &gt;= 8.1)","text":""},{"location":"iac/opentofu/#add-role","title":"Add role","text":"<pre><code>pveum role add tofu -privs \"VM.Allocate VM.Clone VM.Config.CDROM VM.Config.CPU VM.Config.Cloudinit VM.Config.Disk VM.Config.HWType VM.Config.Memory VM.Config.Network VM.Config.Options VM.Monitor VM.Audit VM.PowerMgmt Datastore.AllocateSpace Datastore.Audit SDN.Use\"\n</code></pre>"},{"location":"iac/opentofu/#add-user","title":"Add user","text":"<pre><code>Interface Add PAM user\n</code></pre>"},{"location":"iac/opentofu/#link-role-user","title":"link role user","text":"<pre><code>pveum aclmod / -user tofu@pam -role tofu\n</code></pre>"},{"location":"iac/opentofu/#generate-token","title":"generate token","text":"<pre><code>pveum user token add tofu@pam fortofu -expire 0 -privsep 0 -comment \"Tofu token\"\n</code></pre>"},{"location":"iac/opentofu/#test-token","title":"test token","text":"<pre><code>curl -X GET 'https://$PROXMOX_URL:8006/api2/json/nodes' -H 'Authorization: PVEAPIToken=terraform@pve!terraform=$TOKEN'\n</code></pre>"},{"location":"iac/opentofu/#files","title":"Files","text":""},{"location":"iac/opentofu/#providertf","title":"provider.tf","text":"<pre><code>terraform {\n    required_providers {\n        proxmox =  {\n        source = \"bpg/proxmox\"\n        version = \"&gt;= 0.38.1\"\n        }\n    }\n}\nprovider \"proxmox\" {\n    endpoint = var.pm_api_url\n    api_token = var.pm_api_token\n    insecure = false  # Warning TLS cert of proxmox webui must be valid (Let's Encrypt)\n    ssh {\n        agent    = true\n        username = \"root\"\n    }\n}\n</code></pre>"},{"location":"iac/opentofu/#varstf","title":"vars.tf","text":"<pre><code>variable  \"pm_api_url\" {\n    default =  \"https://$PROXMOX_URL:8006/api2/json\"\n}\nvariable  \"pm_api_token\" {\n    default =  \"tofu@pam!fortofu=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\n}\nvariable  \"target_node\" {\n    default =  \"proxmox2\"\n}\nvariable \"clone\" {\n    default =  \"debian12-temp\"\n}\nvariable  \"ssh_key\" {\n    default =  \"ssh-ed25519 XXXXXXXX clinux@rocky9.local\"\n</code></pre>"},{"location":"iac/opentofu/#maintf","title":"main.tf","text":"<pre><code>resource \"proxmox_virtual_environment_vm\" \"debian_vm\" {\n    name        = \"bpg-debian12\"\n    description = \"Managed by opentofu\"\n    tags        = [\"opentofu\", \"debian\"]\n    node_name = var.target_node\n    clone {\n        vm_id = \"1000\"\n    }\n\n    cpu {\n        cores = 2\n        type = \"host\"\n        numa = true\n    }\n    memory {\n        dedicated = 2048\n    }\n    network_device {\n        bridge = \"vmbr0\"\n        model = \"virtio\"\n    }\n\n    efi_disk {\n        datastore_id = \"local-lvm\"\n        file_format = \"raw\"\n        type    = \"4m\"\n    }\n\n    disk {\n        datastore_id = \"local-lvm\"\n        file_format = \"raw\"\n        interface = \"scsi0\"\n        size = \"10\"\n    }\n\n    operating_system {\n        type = \"l26\"\n    }\n    machine = \"q35\"\n    agent {\n        enabled = false\n    }\n\n    initialization {\n        ip_config {\n            ipv4 {\n                address = \"192.168.1.170/24\"\n                gateway = \"192.168.1.1\"\n            }\n        }\n        user_account {\n            keys     = [var.ssh_key]\n            password = \"tofu\"\n            username = \"debian\"\n        }\n    }\n}\n</code></pre>"},{"location":"kubernates/mikrok8s/","title":"mikrok8s","text":""},{"location":"kubernates/mikrok8s/#requierement","title":"Requierement","text":"<ul> <li>snap</li> <li>sudo package     # apt install sudo</li> </ul>"},{"location":"kubernates/mikrok8s/#install","title":"Install","text":"<pre><code># snap install microk8s --classic\n# nft tcp dport 16443 counter accept comment \"accept kube\"\n</code></pre>"},{"location":"kubernates/mikrok8s/#get-konfig","title":"Get konfig","text":"<pre><code># microk8s config\n</code></pre>"},{"location":"kubernates/mikrok8s/#get-token","title":"Get token","text":"<pre><code># token=$(microk8s kubectl -n kube-system get secret | grep default-token | cut -d \" \" -f1) \n# microk8s kubectl -n kube-system describe secret $token | grep token:\n</code></pre>"},{"location":"kubernates/mikrok8s/#add-addon","title":"Add addon","text":"<pre><code># microk8s enable dashboard \n# microk8s enable storage\n</code></pre>"},{"location":"kubernates/mikrok8s/#add-loadbalancer","title":"Add loadbalancer","text":"<pre><code># microk8s enable metallb:PUBLICIP-PUBLICIP\n</code></pre>"},{"location":"kubernates/mikrok8s/#kubectl","title":"kubectl","text":""},{"location":"kubernates/mikrok8s/#setup","title":"setup","text":"<pre><code>$ export KUBECONFIG=~/.kube/microk8s\n$ kubectl get pods -A\n</code></pre>"},{"location":"kubernates/mikrok8s/#dashboard","title":"dashboard","text":"<pre><code>$ microk8s kubectl describe secret -n kube-system microk8s-dashboard-token\n$ kubectl proxy\n</code></pre> <ul> <li>local dashboard</li> </ul>"},{"location":"kubernates/mikrok8s/#grafana","title":"Grafana","text":""},{"location":"kubernates/mikrok8s/#install_1","title":"install","text":"<pre><code># microk8s enable prometheus\n# microk8s status\n</code></pre>"},{"location":"kubernates/mikrok8s/#access","title":"access","text":"<ul> <li>port forwad (k9s)</li> <li>admin:prom-operator</li> </ul>"},{"location":"linux/environnement/","title":"Bash","text":""},{"location":"linux/environnement/#alias","title":"Alias","text":""},{"location":"linux/environnement/#list","title":"List","text":"<pre><code>$ alias\n</code></pre>"},{"location":"linux/environnement/#shell","title":"shell","text":"<pre><code>alias cp='cp -i'\nalias dfg='df -h'\nalias dus='du -ms $(ls -A)'\nalias dusx='du -xms $(ls -A)'\nalias h='history'\nalias j='jobs -l'\nalias l.='ls -d .* --color=auto'\nalias ll='ls -l --color=auto'\nalias lla='ls -alrt'\nalias ls='ls --color=auto'\nalias mkdir='mkdir -pv'\nalias mv='mv -i'\nalias nets='netstat -tnlpv'\n</code></pre>"},{"location":"linux/environnement/#git","title":"Git","text":"<pre><code>alias g.='git add . -A'\nalias g.c='git add . -A &amp;&amp; gc'\nalias gba='git branch -a'\nalias gc='git commit -m'\nalias gcout='git checkout'\nalias gdu='git diff @{upstream}'\nalias gfd='git fetch --dry-run'\nalias glog='git log --stat --pretty=short --graph'\nalias glr='git remote -v'\nalias glt='git tag'\nalias gph='git push origin'\nalias gs='git status'\n</code></pre>"},{"location":"linux/history/","title":"History","text":""},{"location":"linux/history/#view","title":"View","text":""},{"location":"linux/history/#list","title":"list","text":"<pre><code>$ history\n</code></pre>"},{"location":"linux/history/#search-all","title":"search all","text":"<pre><code>$ history | grep sudo\n$ !sudo:p \n$ !18:p\n</code></pre>"},{"location":"linux/history/#search-interactive","title":"search interactive","text":"<pre><code>Ctrl + R\n</code></pre>"},{"location":"linux/history/#action","title":"Action","text":""},{"location":"linux/history/#execute","title":"execute","text":"<pre><code>$ !sudo\n$ !18\n</code></pre>"},{"location":"linux/history/#clean-history","title":"clean history","text":"<pre><code>$ history -cw\n$ &gt; ~/.bash_history\n</code></pre>"},{"location":"linux/history/#config","title":"config","text":""},{"location":"linux/history/#add-timestamp","title":"Add timestamp","text":"<pre><code>$ echo \"export HISTTIMEFORMAT='%F, %T '\" &gt;&gt; ~/.bashrc\n$ source ~/.bashrc\n</code></pre>"},{"location":"linux/history/#increase-history-length-default-1000","title":"Increase history length (default 1000)","text":"<pre><code>$ echo \"HISTSIZE=10000\" &gt;&gt; ~/.bashrc\n$ echo \"HISTFILESIZE=10000\" &gt;&gt; ~/.bashrc    \n$ source ~/.bashrc\n</code></pre>"},{"location":"linux/history/#direct-write-to-history","title":"Direct write to history","text":"<pre><code>$ echo \"PROMPT_COMMAND='history -a'\" &gt;&gt; ~/.bashrc   \n$ source ~/.bashrc\n</code></pre>"},{"location":"linux/network/","title":"Network","text":""},{"location":"linux/network/#listen-port","title":"Listen port","text":"<pre><code>netstat -tnlpv\n</code></pre>"},{"location":"linux/nmap/","title":"Nmap","text":""},{"location":"linux/nmap/#get-host-with-icmp","title":"Get host with icmp","text":"<pre><code># nmap -sn 192.168.1.0/24\n</code></pre>"},{"location":"linux/nmap/#_1","title":"Nmap","text":""},{"location":"linux/security/","title":"Security","text":""},{"location":"linux/security/#rkhunter","title":"rkhunter","text":""},{"location":"linux/security/#install","title":"install","text":"<pre><code># apt install rkhunter\n</code></pre>"},{"location":"linux/security/#run","title":"run","text":"<pre><code># rkhunter -c --rwo\n</code></pre> <ul> <li>-c : check </li> <li>--rwo : report warning only</li> </ul>"},{"location":"linux/security/#lynis","title":"lynis","text":"<pre><code># cd /usr/local/sbin &amp;&amp; git clone https://github.com/CISOfy/lynis\n# lynis audit system\n</code></pre>"},{"location":"linux/storage/","title":"Storage","text":""},{"location":"linux/storage/#disk-extension","title":"Disk extension","text":""},{"location":"linux/storage/#check","title":"check","text":"<pre><code>lsblk\n</code></pre> <p><code>lsblk NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS sdb       8:16   0  110G  0 disk \u2514\u2500sdb1    8:17   0  100G  0 part /rsync</code></p>"},{"location":"linux/storage/#extend-partition","title":"extend partition","text":"<p><code>growpart -N /dev/sdb 1     growpart /dev/sdb 1</code> <code>lsblk NAME    MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS sdb       8:16   0  110G  0 disk \u2514\u2500sdb1    8:17   0  110G  0 part /rsync</code> <code>df -h</code> <code>Filesystem      Size  Used Avail Use% Mounted on /dev/sdb1        98G   24K   93G   1% /rsync</code> <code>resize2fs /dev/sdb1</code> <code>Filesystem      Size  Used Avail Use% Mounted on /dev/sdb1       108G   24K  103G   1% /rsync</code></p>"},{"location":"linux/users/","title":"Users","text":""},{"location":"linux/users/#regular","title":"regular","text":""},{"location":"linux/users/#get-id","title":"get id","text":"<pre><code>$ id\nuid=1000(cyklodev) gid=1000(cyklodev) groups=1000(cyklodev)\n</code></pre>"},{"location":"linux/users/#change-password","title":"change password","text":"<pre><code>$ passwd\nChanging password for user cyklodev.\nCurrent password:\nNew password:\nRetype new password:\npasswd: all authentication tokens updated successfully.\n</code></pre>"},{"location":"linux/users/#get-password-age","title":"get password age","text":"<pre><code>$ chage -l cyklodev\nLast password change                                    : Sep 30, 2023\nPassword expires                                        : never\nPassword inactive                                       : never\nAccount expires                                         : never\nMinimum number of days between password change          : 0\nMaximum number of days between password change          : 99999\nNumber of days of warning before password expires       : 7\n</code></pre>"},{"location":"linux/users/#root","title":"root","text":""},{"location":"linux/users/#change-age-password","title":"change age password","text":"<pre><code># chage -I -1 -m 1 -M 90 -E -1 -d $(date '+%F') cyklodev\n</code></pre> <ul> <li>-I : day before account is locked</li> <li>-m : minimal duration before password can be changed</li> <li>-M : maximum duration of valid password</li> <li>-E : date of password expiration (days from timestamp init)</li> <li>-d : date of password changing</li> </ul>"},{"location":"linux/users/#add-user-to-sudoers","title":"add user to sudoers","text":"<pre><code># usermod \u2013aG wheel $USER\n</code></pre>"},{"location":"linux/users/#add-user-to-group1-and-group2","title":"add user to group1 and group2","text":"<pre><code># usermod \u2013aG group1,group2 $USER\n</code></pre>"},{"location":"linux/users/#remove-user-to-group1-and-group2","title":"remove user to group1 and group2","text":"<pre><code># usermod \u2013aG group1,group2 $USER\n</code></pre>"},{"location":"virtualization/proxmox/","title":"Proxmox","text":""},{"location":"virtualization/proxmox/#build-template","title":"Build template","text":""},{"location":"virtualization/proxmox/#get-qcow-image","title":"get qcow image","text":"<pre><code>cd /tmp &amp;&amp; wget https://cloud.debian.org/images/cloud/bookworm/20231013-1532/debian-12-genericcloud-amd64-20231013-1532.qcow2\n</code></pre>"},{"location":"virtualization/proxmox/#build-template-vm","title":"build template vm","text":"<pre><code>qm create 1000 --memory 1024 --core 1 --name debian12-temp --net0 virtio,bridge=vmbr0 --description \"Debian 12 cloud template\"\nqm importdisk 1000 /tmp/debian-12-genericcloud-amd64-20231013-1532.qcow2 local-lvm\nqm set 1000 --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-1000-disk-0\nqm set 1000 --boot c --bootdisk scsi0\nqm set 1000 --ide2 local-lvm:cloudinit\nqm set 1000 --serial0 socket --vga serial0\nrm -f /tmp/debian-12-genericcloud-amd64-20231013-1532.qcow2\n</code></pre>"},{"location":"virtualization/proxmox/#extend-hd","title":"Extend HD","text":""},{"location":"virtualization/proxmox/#gui","title":"Gui","text":"<pre><code>VM &gt; Hardware &gt; HD &gt; Disk Action &gt; Resize\n</code></pre>"},{"location":"virtualization/proxmox/#cli","title":"Cli","text":"<pre><code>qm resize VMID DISKNAME +5G\n</code></pre>"},{"location":"virtualization/proxmox/#guest","title":"Guest","text":"<pre><code>growpart /dev/sda 1\nresize2fs /dev/sda1\n</code></pre>"}]}